blueprint:
  name: Hausstatus mit AI und Alexa
  description: >
    Fragt einen AI-Conversation-Agenten (Gemini, OpenAI) nach dem Hausstatus
    und gibt die Antwort über das ausgewählte Alexa-Gerät aus.
  domain: automation
  input:
    agent_id:
      name: AI-Agent
      description: Wähle den AI-Agenten (z. B. conversation.google_ai_conversation)
      selector:
        entity:
          domain: conversation
    ai_prompt:
      name: AI Prompt
      description: Text, der an den AI-Agenten gesendet wird
      default: >
        Agiere als Home Assistant Experte. Formuliere einen kurzen Satz mit den
        folgenden Inhalten: Sind noch Fenster oder Türen geöffnet? - welche
        Lichter sind noch eingeschaltet? Ohne Schalter oder Rollladen.
      selector:
        text:
    alexa_device:
      name: Alexa-Gerät
      description: Wähle das Alexa-Gerät für die Sprachausgabe
      selector:
        entity:
          domain: media_player

trigger:
  - platform: event
    event_type: dummy_trigger
    # Dieser Blueprint wird manuell oder per Szene ausgelöst

action:
  - alias: AI-Abfrage starten
    action: conversation.process
    data:
      agent_id: !input agent_id
      text: !input ai_prompt
    response_variable: ai_response

  - alias: Variablen setzen
    variables:
      ausgabe_text: "{{ ai_response.response.speech.plain.speech | default('Ich konnte den Status nicht abrufen.') }}"

  - alias: Sprachausgabe über Alexa
    action: tts.cloud_say
    target:
      entity_id: !input alexa_device
    data:
      message: "{{ ausgabe_text }}"
      language: "de-DE"
